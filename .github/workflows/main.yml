name: Delta deploy to PROD (on PR merge to `main`)

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  Delta-Deploy-PROD:
    runs-on: ubuntu-latest
    steps:
      # Install Salesforce CLI
      - name: Install Salesforce CLI
        run: |
          npm install @salesforce/cli --global
          sf --version

      # Install SFDX-Git-Delta
      - name: Install sfdx-git-delta
        run: |
          echo y | sf plugins install sfdx-git-delta
          sf plugins

      # Install utilities
      - name: Install utilities
        run: |
          pip install yq
          xq --version

      # Checkout the PR source branch
      - name: Checkout PR source branch
        if: github.event.pull_request.head.ref != ''
        run: |
          git fetch origin pull/${{ github.event.pull_request.number }}/head:${{ github.head_ref }}
          git checkout ${{ github.head_ref }}

      # Authenticate to target org
      - name: Authenticate to Org
        run: |
          echo ${{ secrets.SFDXAUTHURL_PROD }} > ./SFDX_URL.txt
          sf org login sfdx-url --sfdx-url-file ./SFDX_URL.txt --set-default

      # Compute the common ancestor commit between main and the PR source branch
      - name: Compute common ancestor commit
        id: compute-ancestor
        run: |
          export BASE_COMMIT=$(git merge-base origin/main HEAD)
          echo "BASE_COMMIT=$BASE_COMMIT" >> $GITHUB_ENV
          echo "Base commit: $BASE_COMMIT"

      # Run delta with sfdx-git-delta to generate package.xml with changed files
      - name: Compute delta using sfdx-git-delta
        run: |
          sf sgd:source:delta --to "HEAD" --from ${{ env.BASE_COMMIT }} --output-dir "." -i .forceignore
          echo "--- package.xml generated with added and modified metadata ---"
          cat package/package.xml
          echo

      # Deploy to PROD
      - name: Deploy to PROD
        run: |
          sf project deploy start --manifest package/package.xml
          echo "--- Deployment to PROD Completed ---"
